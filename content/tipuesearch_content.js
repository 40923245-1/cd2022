var tipuesearch = {"pages": [{'title': 'About', 'text': '40923245 \n', 'tags': '', 'url': 'About.html'}, {'title': '班級網頁', 'text': '\n \n \n \n 2b \n website \n group \n \n \n 40723134 \n 40723134 \n 7 \n \n \n 40723136 \n 40723136 \n 7 \n \n \n 40723217 \n 40723217 \n 6 \n \n \n 40732331 \n 40732331 \n 7 \n \n \n 40823215 \n 40823215 \n 2 \n \n \n 40923201 \n 40923201 \n 1 \n \n \n 40923203 \n 40923203 \n 2 \n \n \n 40923204 \n 40923204 \n 2 \n \n \n 40923205 \n 40923205 \n 1 \n \n \n 40923206 \n 40923206 \n 3 \n \n \n 40923207 \n 40923207 \n 2 \n \n \n 40923208 \n 40923208 \n 1 \n \n \n 40923209 \n 40923209 \n 2 \n \n \n 40923210 \n 40923210 \n 1 \n \n \n 40923211 \n 40923211 \n 4 \n \n \n 40923212 \n 40923212 \n 5 \n \n \n 40923213 \n 40923213 \n 2 \n \n \n 40923214 \n 40923214 \n 7 \n \n \n 40923216 \n 40923216 \n 7 \n \n \n 40923217 \n 40923217 \n 1 \n \n \n 40923218 \n 40923218 \n 4 \n \n \n 40923219 \n 40923219 \n 6 \n \n \n 40923220 \n 40923220 \n 2 \n \n \n 40923221 \n 40923221 \n 4 \n \n \n 40923223 \n 40923223 \n 4 \n \n \n 40923224 \n 40923224 \n 3 \n \n \n 40923225 \n 40923225 \n 6 \n \n \n 40923226 \n 40923226 \n 3 \n \n \n 40923227 \n 40923227 \n 4 \n \n \n 40923228 \n 40923228 \n 7 \n \n \n 40923229 \n 40923229 \n 5 \n \n \n 40923230 \n 40923230 \n 1 \n \n \n 40923231 \n 40923231 \n 1 \n \n \n 40923232 \n 40923232 \n 6 \n \n \n 40923233 \n 40923233 \n 5 \n \n \n 40923234 \n 40923234 \n 5 \n \n \n 40923235 \n 40923235 \n 1 \n \n \n 40923236 \n 40923236 \n 6 \n \n \n 40923237 \n 40923237 \n 5 \n \n \n 40923238 \n 40923238 \n 4 \n \n \n 40923240 \n 40923240 \n 2 \n \n \n 40923241 \n 40923241 \n 6 \n \n \n 40923242 \n 40923242 \n 3 \n \n \n 40923243 \n 40923243 \n 4 \n \n \n 40923245 \n 40923245 \n 3 \n \n \n 40923246 \n 40923246 \n 6 \n \n \n 40923247 \n 40923247 \n 3 \n \n \n 40923248 \n 40923248 \n 7 \n \n \n 40923249 \n 40923249 \n 3 \n \n \n 40923250 \n 40923250 \n 6 \n \n \n 40923251 \n 40923251 \n 5 \n \n \n 40923252 \n 40923252 \n 3 \n \n \n 40923253 \n 40923253 \n 5 \n \n \n 40971220 \n 40971220 \n 5 \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '班級網頁.html'}, {'title': 'w3', 'text': '分配到作業22~26 \n 22 \n \n \n \n \n \n   \n \n \n \n \n \n \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w6', 'text': '按照老師所給的 wink影片 建立W6blog網頁 \n blog連結 \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': '參考老師w7任務的 wink 並修改路徑 \n \n blog \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8', 'text': '\n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n 上面兩部影片:第一部為零件繪製，第二部為將組合完的Uarm傳至coppeliaSim \n 心得:這是第一次用solvespace，使用上十分生疏，也遇到了問題。例如:我要再已擠出的面再擠出另一個實體solvespace並不向其他繪圖軟體可以直接擠製，需要選擇軸線與兩點才能。 \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w10', 'text': '\n \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w10_block_ui', 'text': '\n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w10_block_ui.html'}, {'title': 'w10_nx_integ', 'text': '\n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w10_nx_integ.html'}, {'title': 'w10_ssh', 'text': '\n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w10_ssh.html'}, {'title': 'w11', 'text': 'w11-1 任務: \n 請各組組員在第一節課堂時段, 以每兩人一小組的方式, 在組長帳號下的分組倉儲中的同一網頁 (標題為 w11s1 ~w11s4) 加入個人 w8-w10 協同設計過程所負責的項目內容與心得. 過程中請參考下列 Wink 影片解決可能產生的衝突, 最後並將 git pull 至 acp 的操作過程, 建立 Wink 影片後, 以組員為單位嵌入個人負責的協同網頁中. \n 學習要點: \n 各組員是否透過 SSH 協定, 參與組長帳號下的分組倉儲內容協同編輯? \n 各組員是否在自己的 Github 帳號下, fork 分組協同倉儲後, 與組長帳號下的分組倉儲內容保持同步? \n 各組員是否在近端對分組倉儲改版前, 都透過 git pull 處理內容衝突與合併後, 再對分組倉儲改版? \n 各組是否每週舉行分組會議, 檢討協同設計內容進度, 並研討所面臨議題解決方案? \n \n 衝突解決方法: wink影片 \n 對應大組網頁: w11s2 \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': '\n', 'tags': '', 'url': 'w12.html'}, {'title': 'online', 'text': '', 'tags': '', 'url': 'online.html'}, {'title': 'w13', 'text': 'part3流程: \n 1.複製製程式碼 check_cd2022_page.py 並跑程式 \n from browser import html\nfrom browser import document\n\nbrython_div = document["brython_div"]\n\n# 根據 href 與 content 將 html 元件中的 anchor 插入頁面\ndef makeLink(href, content):\n    brython_div <= html.A(content, href=href)\n    brython_div <= html.BR()\n\n# 將 2b 學號、帳號與組別的網址設為 studlist_url\naorb = "2b"\npage_title = "online"\nstudlist_url = "https://mde.tw/studlist/2022spring/" + aorb + ".txt"\n# 利用 open() 與 read() 讀出資料\ndata = open(studlist_url).read()\n# 若要 debug 可以查驗所取得的 data 內容\n#print(data)\n# 利用 split() 函式, 使用每一行的跳行符號\\n切割所讀回的資料\n# 切割後的 stud 為數列 (list)\nstud = data.split("\\n")\n# 列出去頭(標題)與去尾(空白行)的數列查驗\n#print(stud[1:-1])\ncount = 0\n# blog name w6_studno.html\nmember = []\n# 利用 for 迴圈逐一取出數列中的元素(每位學員的資料)\nfor i in stud[1:-1]:\n    #print(i)\n    studno, github, grp = i.split("\\t")\n    #print(studno, github, grp)\n    #print(type(grp))\n    stud_url = "https://" + github + ".github.io/cd2022/content/" + page_title + ".html"\n    url_title = studno + " " + page_title\n    try:\n        blog_content = open(stud_url).read()\n        makeLink(stud_url, url_title)\n    except:\n        #print(studno + " 尚無 w6 blog!")\n        pass\n    #makeLink(stud_url, url_title)\n    # 因為有人沒有組別或沒有登記 github 帳號\n    if grp != "" and github != "":\n        if grp == "1":\n            #print(studno)\n            count += 1\n    else:\n        print("尚未分組者:", studno)\n        \nprint("done") \n \n', 'tags': '', 'url': 'w13.html'}, {'title': 'w14', 'text': '2b: \n \n (說明如何利用 Leo Editor 與 Python 編寫 CoppeliaSim 場景中的控制程式) \n (說明如何利用 Lua 編寫 MTB robot 機械手臂的控制程式) \n 說明如何利用 Lua 引入 suctionpad component 執行物件吸取與釋放) \n \n \n 以鍵盤控制 MTB_nx robot (for CoppeliaSim 4.3.0) \n 程式碼: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n 55 \n 56 \n 57 \n 58 \n 59 \n 60 \n 61 \n 62 \n 63 \n 64 \n 65 \n 66 \n 67 \n 68 \n 69 \n 70 \n 71 \n 72 \n 73 \n 74 \n 75 \n 76 \n 77 \n 78 \n 79 \n 80 \n 81 \n 82 \n 83 \n 84 \n 85 \n 86 \n 87 \n 88 \n 89 \n 90 \n 91 \n 92 \n 93 \n 94 \n 95 \n 96 \n 97 \n 98 \n 99 \n 100 \n 101 \n 102 \n 103 \n 104 \n 105 \n 106 \n 107 \n 108 \n 109 \n 110 \n 111 \n 112 \n 113 \n 114 \n 115 \n 116 \n 117 \n 118 \n 119 \n 120 \n 121 \n 122 \n 123 \n 124 \n 125 \n 126 \n 127 \n 128 \n 129 \n 130 \n 131 \n 132 \n 133 \n 134 \n 135 \n 136 \n 137 \n 138 \n 139 \n 140 \n 141 \n 142 \n 143 \n 144 \n 145 \n 146 \n 147 \n 148 \n 149 \n 150 \n 151 \n 152 \n 153 \n 154 \n 155 \n 156 \n 157 \n 158 \n 159 \n 160 \n 161 \n 162 \n 163 \n 164 \n 165 \n 166 \n 167 \n 168 \n 169 \n 170 \n 171 \n \n \n \n function   sysCall_init()  \n \xa0\xa0\xa0\xa0 axis1=sim.getObject( \'/joint1\' ) \n \xa0\xa0\xa0\xa0 axis2=sim.getObject( \'/joint2\' ) \n \xa0\xa0\xa0\xa0 axis3=sim.getObject( \'/joint3\' ) \n \xa0\xa0\xa0\xa0 suctionPad=sim.getObject( \'/suctionPad\' ) \n \xa0\xa0\xa0\xa0 MTB_Robot=sim.getObject( "/base" ) \n \xa0\xa0\xa0\xa0 BaseFrame=sim.getObject( "/BaseFrame" ) \n \xa0\xa0\xa0\xa0 block =sim.getObject( "/block" ) \n \xa0\xa0\xa0\xa0 rotation1 = 0 \n \xa0\xa0\xa0\xa0 distance3 = 0 \n \xa0\xa0\xa0\xa0 deg =  math.pi /180. \n end \n \xa0 \n \xa0 \n function   sysCall_actuation()  \n --[[ \n \xa0\xa0\xa0\xa0 rotation1 = rotation1 + 0.5*deg \n \xa0\xa0\xa0\xa0 print(rotation1) \n \xa0\xa0\xa0\xa0 sim.setJointPosition(axis1, -rotation1) \n \xa0\xa0\xa0\xa0 sim.setJointPosition(axis2, -rotation1) \n ]] \n \xa0 \n \xa0\xa0\xa0\xa0 message, auxiliaryData=sim.getSimulatorMessage() \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 while message ~= -1 do \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 key=auxiliaryData[1] \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.addStatusbarMessage(\'user press key:\'..key) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if (message==sim.message_keypress) then \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 --if (auxiliaryData[1]==112) then --p activate the suction pad \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if (auxiliaryData[1]==string.byte(\'p\')) then \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 -- if key p pressed activate the suction mode \n sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'true\') \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end -- if p \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if (auxiliaryData[1]==113) then --q deactivate the suction pad \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 -- if key q pressed deactivate the suction mode \n sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'false\') \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end -- if q \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if (auxiliaryData[1]==114) then --r right turn in degree \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 -- if key r pressed axis1 angle adds 5 degrees \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 rotation1 = rotation1 + 5*deg \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.setJointPosition(axis1, rotation1) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end -- if r \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if (auxiliaryData[1]==108) then --l left turn in degree \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 -- if key l pressed axis1 angle substract 5 degrees \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 rotation1 = rotation1 - 5*deg \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.setJointPosition(axis1, rotation1) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end -- if l \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if (auxiliaryData[1]==100) then --d suction pad down \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 -- if key d pressed axis3 will down 0.01 m \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 distance3 = distance3 + 0.01 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.setJointPosition(axis3, distance3) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end -- if d \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if (auxiliaryData[1]==117) then --u suction pad up \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 -- if key u pressed axis3 will up 0.01 m \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 distance3 = distance3 - 0.01 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.setJointPosition(axis3, distance3) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end -- if u \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if (auxiliaryData[1]==99) then --c coordinate of block \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 --blockPosition = sim.getObjectPosition(block, BaseFrame) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 blockPosition = sim.getObjectPosition(suctionPad, BaseFrame) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition)) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end --if c \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end\xa0 -- if \n \xa0\xa0\xa0\xa0 message, auxiliaryData=sim.getSimulatorMessage() \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end -- while \n end -- function \n function sysCall_sensing()  \n --[[ \n \xa0\xa0\xa0\xa0 -- Read Proximity sensor (0= nothing detected, 1 = object detected) \n \xa0\xa0\xa0\xa0 local res = sim.readProximitySensor(proximity) \n \xa0 \n \xa0\xa0\xa0\xa0 -- Check if possible to insert an new box \n \xa0\xa0\xa0\xa0 if (sim.getSimulationTime()-T_last_inserted > T_insert) and not hasStopped then \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 insertBox() \n \xa0\xa0\xa0\xa0 end \n \xa0 \n \xa0\xa0\xa0\xa0 -- If proximity sensor detects an object, stop the belt, stop inserting objects \n \xa0\xa0\xa0\xa0 if res == 1 and not hasStopped then \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if boolList[1] then \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 deltaTime = sim.getSimulationTime()-T_last_inserted \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 hasStopped = true \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 local box = table.remove(boxList,1) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 local boxDummy = table.remove(boxDummyList,1) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 table.remove(boolList,1) \n \xa0 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.removeObject(box) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.removeObject(boxDummy) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end \n \xa0\xa0\xa0\xa0 end \n \xa0 \n \xa0\xa0\xa0\xa0 -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting \n \xa0\xa0\xa0\xa0 if res == 0 and hasStopped then \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 hasStopped = false \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 T_last_inserted = sim.getSimulationTime()-deltaTime \n \xa0\xa0\xa0\xa0 end \n \xa0\xa0\xa0\xa0 \xa0 \n ]] -- \n end \n function   sysCall_cleanup()  \n end \n -- Convert a lua table into a lua syntactically correct string \n function   table_to_string(tbl) \n \xa0\xa0\xa0\xa0 local   result =  "{" \n \xa0\xa0\xa0\xa0 for   k, v  in   pairs (tbl)  do \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 -- Check the key type (ignore any numerical keys - assume its an array) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   type (k) ==  "string"   then \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 result = result.. "[\\"" ..k.. "\\"]" .. "=" \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end \n \xa0 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 -- Check the value type \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   type (v) ==  "table"   then \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 result = result..table_to_string(v) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 elseif   type (v) ==  "boolean"   then \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 result = result.. tostring (v) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 v = round(v, 4) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 result = result.. "\\"" ..v.. "\\"" \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 end \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 result = result.. "," \n \xa0\xa0\xa0\xa0 end \n \xa0\xa0\xa0\xa0 -- Remove leading commas from the result \n \xa0\xa0\xa0\xa0 if   result ~=  ""   then \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 result = result:sub(1, result:len()-1) \n \xa0\xa0\xa0\xa0 end \n \xa0\xa0\xa0\xa0 return   result.. "}" \n end \n function   round(x, n) \n \xa0\xa0\xa0\xa0 n =  math.pow (10, n  or   0) \n \xa0\xa0\xa0\xa0 x = x * n \n \xa0\xa0\xa0\xa0 if   x >= 0  then   x =  math.floor (x + 0.5)  else   x =  math.ceil (x - 0.5)  end \n \xa0\xa0\xa0\xa0 return   x / n \n end \n \xa0 \n \xa0 \n function   insertBox() \n \xa0\xa0\xa0\xa0 -- Generate random numbers \n \xa0\xa0\xa0\xa0 local   rand1 =  math.random () \n \xa0\xa0\xa0\xa0 local   rand2 =  math.random () \n \xa0\xa0\xa0\xa0 local   rand3 =  math.random () \n \xa0\xa0\xa0\xa0 -- Generate random disturbances on position and orientation \n \xa0\xa0\xa0\xa0 local   dx = (2*rand1-1)*0.1 \n \xa0\xa0\xa0\xa0 local   dy = (2*rand2-1)*0.1 \n \xa0\xa0\xa0\xa0 local   dphi = (2*rand3-1)*0.5 \n \xa0\xa0\xa0\xa0 local   disturbedCoordinates = {0,0,0} \n \xa0\xa0\xa0\xa0 disturbedCoordinates[1] = insertCoordinate[1]+dx \n \xa0\xa0\xa0\xa0 disturbedCoordinates[2] = insertCoordinate[2]+dy \n \xa0\xa0\xa0\xa0 disturbedCoordinates[3] = insertCoordinate[3] \n \xa0\xa0\xa0\xa0 -- Copy and paste box and boxDummy \n \xa0\xa0\xa0\xa0 local   insertedObjects = sim.copyPasteObjects({box,boxDummy},0) \n \xa0\xa0\xa0\xa0 -- Update last inserted box time \n \xa0\xa0\xa0\xa0 T_last_inserted = sim.getSimulationTime() \n \xa0\xa0\xa0\xa0 -- Move and rotate \n \xa0\xa0\xa0\xa0 sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates) \n \xa0\xa0\xa0\xa0 sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi}) \n \xa0\xa0\xa0\xa0 -- Store handles to boxes and dummies \n \xa0\xa0\xa0\xa0 table.insert (boxList,insertedObjects[1]) \n \xa0\xa0\xa0\xa0 table.insert (boxDummyList,insertedObjects[2])  \n \xa0\xa0\xa0\xa0 -- Decide if object is good or bad \n \xa0\xa0\xa0\xa0 local   decision =  math.random ()  \n \xa0\xa0\xa0\xa0 if   decision <= goodPercentage  then \n \xa0\xa0\xa0\xa0 -- Object is good, assign goodColor \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.setShapeColor(insertedObjects[1], nil ,sim.colorcomponent_ambient_diffuse,goodColor) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 table.insert (boolList, true ) \n \xa0\xa0\xa0\xa0 else \n \xa0\xa0\xa0\xa0 -- Object is bad, assign random color \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 sim.setShapeColor(insertedObjects[1], nil ,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3}) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 table.insert (boolList, false ) \n \xa0\xa0\xa0\xa0 end \n end \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w14.html'}, {'title': 'w15', 'text': '\n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n 控制項目: \n 「K、L」底座控制 \n 「J、H」是joint2 \n 「F、G」是joint3 \n 「P」是吸起 \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w16', 'text': '1.已知左側綠色底座的  uArm  機械手臂 ,  其基座座標原點位於絕對座標  (1.0, 0.25, 0),  啟動模擬後  green_suctionpad_frame  座標原點則位於  (0.22859, 0.26047, 0.36576),  請列出運算式說明 ,  啟動模擬後  joint1, joint2  與  joint3  分別以逆時針旋轉  5  度後 ,  求 green_suctionpad_frame  的絕對座標值 . \n \n 詳細請看 w16-1 \n \n 2.已知左側  uarm  前方的紅色方塊頂端中心座標值為  (0.2, 0.4, 0.1),  請列出運算式說明左側  uarm  機械手臂的  joint1, joint2  與  joint3  該如何旋轉才能讓  end effector  的吸盤末端中心點移動至紅色方塊頂端中心 ? \n 程式碼 \n \n 詳細請看 w16-2 \n \n', 'tags': '', 'url': 'w16.html'}, {'title': '期末考週', 'text': '1.利用老師 目錄中的 uArm 機械手臂零件, 修改 "nx12絞鍊"與 "front joint" 零件的外型, 使能將 "Triangular connecting rod", "left link" 與 "end link" 等零組件, 與 "right crank" 與 "right link" 的組件左右互換 \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': '期末考週.html'}]};